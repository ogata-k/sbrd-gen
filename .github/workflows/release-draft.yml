name: Create draft to release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  check-and-build:
    name: Upload for ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name:
          - linux
          - windows
          - intel-macos
          #- apple-macos
        include:
          - name: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            exe_file: sbrd-gen
          - name: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
            exe_file: sbrd-gen.exe
          - name: intel-macos
            os: macos-latest
            target: x86_64-apple-darwin
            exe_file: sbrd-gen
          #- name: apple-macos
          #  os: macos-latest
          #  target: aarch64-apple-darwin
          #  exe_file: sbrd-gen
    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Add Target
        run: rustup target add ${{ matrix.target }}
      - name: Test
        run: cargo test --release --locked --target ${{ matrix.target }}
      - name: Build
        run: cargo build --release --locked --target ${{ matrix.target }}
      - name: Move executable path
        shell: bash
        run: |
          cp -p target/${{ matrix.target }}/release/${{ matrix.exe_file }} ${{ matrix.exe_file }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: ${{ matrix.name }}_${{ matrix.target }}
          path: |
              ${{ matrix.exe_file }}
              README.md
              README-ja.md
              CHANGE_LOG.md
              CHANGE_LOG-ja.md

  draft-release:
    name: Release Draft
    needs: [check-and-build]
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.createDraftRelease.outputs.upload_url }}
    steps:
      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v2.3.4

      # Remove old release drafts by using the curl request for the available releases with draft flag
      - name: Remove Old Release Drafts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases \
            | tr '\r\n' ' ' \
            | jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' \
          curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases/{}
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          # Optionally strip `v` prefix
          strip_v: false
      - name: Create a draft release
        uses: softprops/action-gh-release@v1
        id: createDraftRelease
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{steps.tag.outputs.tag}}
          body: |
            Release for version ${{steps.tag.outputs.tag}}
            
            ## Changelog
            *
          draft: true
          prerelease: false

  attach-assets-to-release:
    name: Attach assets of ${{ matrix.name }} for draft release
    needs: [check-and-build, draft-release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name:
          - linux
          - windows
          - intel-macos
          #- apple-macos
        include:
          - name: linux
            target: x86_64-unknown-linux-gnu
            exe_file: sbrd-gen
            archive_type: tar
            archive_ext: tar.gz
            content_type: application/gzip
          - name: windows
            target: x86_64-pc-windows-msvc
            exe_file: sbrd-gen.exe
            archive_type: zip
            archive_ext: zip
            content_type: application/zip
          - name: intel-macos
            target: x86_64-apple-darwin
            exe_file: sbrd-gen
            archive_type: zip
            archive_ext: zip
            content_type: application/zip
          #- name: apple-macos
          #  target: aarch64-apple-darwin
          #  exe_file: sbrd-gen
          #  archive_type: zip
          #  archive_ext: zip
          #  content_type: application/zip
    steps:
      - name: Export properties
        id: properties
        run: |
          UPLOAD_PATH="${{ matrix.name }}_${{ matrix.target }}"
          echo "::set-output name=upload_path::$UPLOAD_PATH"
          ARCHIVE_FILE="$UPLOAD_PATH.${{ matrix.archive_ext }}"
          echo "::set-output name=archive_file::$ARCHIVE_FILE"
          
          # Required: Depth of directories for build and release is 1.
          BUILD_DIR=build
          mkdir -p "$BUILD_DIR"
          echo "::set-output name=build_dir::$BUILD_DIR"
          RELEASE_DIR=release
          mkdir -p "$RELEASE_DIR"
          echo "::set-output name=release_dir::$RELEASE_DIR"

      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: ${{ steps.properties.outputs.upload_path }}
          path: ${{ steps.properties.outputs.build_dir }}/

      - name: modify executable permission
        run: chmod 555 ${{ steps.properties.outputs.build_dir }}/${{ matrix.exe_file }}

      - name: zip the artifact
        if: ${{ matrix.archive_type == 'zip' }}
        run: zip -j ${{ steps.properties.outputs.release_dir }}/${{ steps.properties.outputs.archive_file }} ${{ steps.properties.outputs.build_dir }}/*
      - name: tar the artifact
        if: ${{ matrix.archive_type == 'tar' }}
        run: tar -zcvf ${{ steps.properties.outputs.release_dir }}/${{ steps.properties.outputs.archive_file }} ${{ steps.properties.outputs.build_dir }}/*

      - name: Upload archived assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.draft-release.outputs.release_upload_url }}
          asset_path: ${{ steps.properties.outputs.release_dir }}/${{ steps.properties.outputs.archive_file }}
          asset_name: ${{ steps.properties.outputs.archive_file }}
          asset_content_type: ${{ matrix.content_type }}

      - name: Create check sum file
        id: create-check-sum
        shell: bash
        run: |
          cd "${{ steps.properties.outputs.release_dir }}"
          CHECK_SUM_FILE="sha256sum_${{ steps.properties.outputs.upload_path }}.txt"
          echo "::set-output name=check_sum_file::$CHECK_SUM_FILE"
          sha256sum "${{ steps.properties.outputs.archive_file }}" > "$CHECK_SUM_FILE"
          cd ..
      - name: Upload check sum file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.draft-release.outputs.release_upload_url }}
          asset_path: ${{ steps.properties.outputs.release_dir }}/${{ steps.create-check-sum.outputs.check_sum_file }}
          asset_name: ${{ steps.create-check-sum.outputs.check_sum_file }}
          asset_content_type: text/plain
